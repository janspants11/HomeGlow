/* Web 3.0-inspired global styles with light and dark themes */
:root {
  --background: #f4f4f9;
  --card-bg: rgba(255, 255, 255, 0.8);
  --card-border: rgba(255, 255, 255, 0.2);
  --text-color: #1a1a2e;
  --text-color-rgb: 26, 26, 46; /* RGB values for #1a1a2e */
  --accent: #6e44ff;
  --gradient: linear-gradient(45deg, #00ddeb, #ff6b6b);
  --shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  --backdrop-blur: blur(10px);
  /* New CSS variables for customization */
  --dynamic-text-size: 16px;
  --dynamic-card-width: 300px;
  --dynamic-card-padding: 20px;
}

[data-theme="dark"] {
  --background: #0a0a1a;
  --card-bg: rgba(30, 30, 50, 0.7);
  --card-border: rgba(100, 100, 150, 0.3);
  --text-color: #a6a6d1;
  --text-color-rgb: 166, 166, 209; /* RGB values for #a6a6d1 */
  --accent: #00ddeb;
  --gradient: linear-gradient(45deg, #2e2767, #620808);
  --shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

html,
body {
  margin: 0;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  background: var(--background);
  color: var(--text-color);
  transition: background 0.3s ease, color 0.3s ease;
  touch-action: manipulation;
  width: 100%;
  height: 100%;
  /* Default scrolling for non-rotated state */
  overflow-x: hidden;
  overflow-y: auto;
  font-size: var(--dynamic-text-size); /* Apply dynamic text size */
}

body.rotated {
  /* When body is rotated, swap overflow directions */
  overflow-x: auto; /* This will become the "vertical" scroll for rotated content */
  overflow-y: hidden; /* Hide the original vertical scroll */
}

.container {
  padding: 20px;
  /* Removed min-height: 100vh; to allow dynamic height */
  background: var(--gradient);
  background-attachment: fixed;
  transition: transform 0.3s ease-in-out;
  /* Smooth transition for rotation */
  position: relative;
  /* Ensure proper positioning of children */
  width: 100%; /* Ensure container fills its parent */
  /* Removed overflow properties from here, body will manage */
}

/* Material-UI Grid Container specific styles */
.MuiGrid-container {
  width: 100%; /* Ensure the grid container takes full width */
  /* Add any other flex/grid properties if needed for stacking */
}

/* Override Material-UI Container's max-width to allow full dynamic width */
.MuiContainer-root {
  max-width: none !important;
}

.rotate-90 {
  transform: translate(-50%, -50%) rotate(90deg);
  /* Center and rotate */
  width: 100vh;
  /* When rotated 90deg, the width becomes the original height */
  height: 100vw;
  /* When rotated 90deg, the height becomes the original width */
  transform-origin: center center;
  /* Ensure rotation is around the center */
  position: absolute;
  top: 50%;
  left: 50%;
  /* Removed overflow properties from here, body will manage */
}

.grid-item {
  display: flex;
  justify-content: center;
}

.card {
  background: var(--card-bg);
  border: 1px solid var(--card-border);
  border-radius: 12px;
  padding: var(--dynamic-card-padding); /* Apply dynamic card padding */
  backdrop-filter: var(--backdrop-blur);
  box-shadow: var(--shadow);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  width: 100%;
  /* Changed to 100% to fill grid item */
  max-width: var(--dynamic-card-width); /* Apply dynamic card width */
  touch-action: manipulation;
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.2);
}

h6,
h1 {
  font-weight: 700;
  letter-spacing: 0.5px;
  color: var(--text-color);
}

button {
  background: var(--gradient);
  color: var(--text-color);
  border: none;
  border-radius: 8px;
  padding: 10px 20px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: background 0.3s ease;
  touch-action: manipulation;
}

button:hover {
  filter: brightness(1.1);
}

.theme-toggle,
.admin-toggle,
.refresh-button {
  position: fixed;
  top: 20px;
  right: 20px;
  background: var(--card-bg);
  border: 1px solid var(--card-border);
  border-radius: 50%;
  padding: 10px;
  width: 100%;
  font-size: 1.2rem;
  cursor: pointer;
  backdrop-filter: var(--backdrop-blur);
  box-shadow: var(--shadow);
  z-index: 1000;
  /* Ensure these are always on top */
}

/* Toggle switch for Web 3.0 */
.toggle-label {
  display: flex;
  align-items: center;
  gap: 10px;
  margin: 10px 0;
  color: var(--text-color);
}

.toggle-switch {
  position: relative;
  width: 48px;
  height: 24px;
}

.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggle-slider {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--card-bg);
  border: 1px solid var(--card-border);
  border-radius: 24px;
  transition: 0.3s;
  backdrop-filter: var(--backdrop-blur);
}

.toggle-slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 2.5px;
  background: var(--accent);
  border-radius: 50%;
  transition: 0.3s;
}

input:checked+.toggle-slider {
  background: var(--gradient);
}

input:checked+.toggle-slider:before {
  transform: translateX(24px);
}

/* Ensure Material-UI components adapt to themes */
.MuiTextField-root input,
.MuiTextField-root label,
.MuiTypography-root {
  color: var(--text-color) !important;
}

.MuiTextField-root .MuiOutlinedInput-notchedOutline {
  border-color: var(--card-border) !important;
}

.MuiListItemText-primary,
.MuiListItemText-secondary {
  color: var(--text-color) !important;
}

.card.transparent-card {
  background: rgba(255, 255, 255, 0.2) !important; /* Light theme transparency */
}

[data-theme="dark"] .card.transparent-card {
  background: rgba(30, 30, 50, 0.3) !important; /* Dark theme transparency */
}

/* Specific rule for text color within transparent cards in dark mode */
[data-theme="dark"] .card.transparent-card .MuiTypography-root,
[data-theme="dark"] .card.transparent-card .MuiTextField-root input,
[data-theme="dark"] .card.transparent-card .MuiTextField-root label,
[data-theme="dark"] .card.transparent-card .MuiListItemText-primary,
[data-theme="dark"] .card.transparent-card .MuiListItemText-secondary {
  color: #a6a6d1 !important; /* Ensure text color for transparent cards in dark mode */
}

/* React Big Calendar specific overrides */
.rbc-calendar {
  color: var(--text-color); /* Ensure calendar text inherits theme color */
}

.rbc-header,
.rbc-day-bg,
.rbc-date-cell,
.rbc-event-content,
.rbc-event-label,
.rbc-event-title {
  color: var(--text-color) !important; /* Force text color for calendar elements */
}

/* More specific rule for date numbers */
.rbc-date-cell span.rbc-date-number {
  color: var(--text-color) !important;
}

/* New rules for pagination and view toggles */
.rbc-toolbar button {
  color: var(--text-color) !important; /* For the text/icons on buttons */
  background-color: transparent !important; /* Ensure button background is transparent */
  border-color: var(--card-border) !important; /* Match border to theme */
}

.rbc-toolbar button:hover {
  background-color: rgba(var(--text-color-rgb), 0.1) !important; /* Subtle hover effect */
}

.rbc-toolbar button.rbc-active {
  background-color: var(--accent) !important; /* Active button background */
  color: white !important; /* Active button text color */
}

/* Adjust background for calendar cells in dark mode if needed */
[data-theme="dark"] .rbc-day-bg {
  background-color: rgba(255, 255, 255, 0.05); /* Slightly visible background for days */
}

[data-theme="dark"] .rbc-today {
  background-color: rgba(0, 128, 0, 0.2) !important; /* Highlight today in dark mode */
}

[data-theme="dark"] .rbc-off-range-bg {
  background-color: rgba(255, 255, 255, 0.02) !important; /* Off-range days in dark mode */
}